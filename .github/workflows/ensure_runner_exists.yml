---
#
#
#
name: ensure-runner-exists

on:
  workflow_call:
    inputs:
      LABEL:
        required: false
        type: string
        default: 'self-hosted'
        description: label on which to filter runners
      INSTANCE_TYPE:
        required: false
        type: string
        default: 't4g.small'
        description: type of EC2 instance to use for the runner
      CONTEXT:
        required: false
        type: string
        default: 'dev'
        description: dev or prod
      NUMBER_OF_RUNNERS:
        required: false
        type: string
        default: 1
        description: number of GitHub runners to create on the EC2 instance
      ROLE_TO_ASSUME:
        required: true
        type: string
        description: AWS role to assume to deploy self-hosted runner
      SYNAPSE_DEPLOYMENT_ROLE:
        required: false
        type: string
        default: ""
        description: AWS role to provide to self-hosted runner that needs to provision infrastructure

jobs:
  # There is no 'github.' variable that gives just the repo name so we have to do this:
  repo-name:
    runs-on: ubuntu-latest
    name: Get repository name
    steps:
      - id: get-name
        run: |
          echo "REPO_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}" >> $GITHUB_OUTPUT
    outputs:
      name: ${{ steps.get-name.outputs.REPO_NAME }}

  find-self-hosted-runner:
    runs-on: ubuntu-latest
    needs: repo-name
    steps:
      - uses: octokit/request-action@v2.4.0
        id: list-runners
        with:
          # Unfortunately there is no way to filter by label or status
          route: GET /repos/{owner}/{repo}/actions/runners
          owner: ${{ github.repository_owner }}
          repo: ${{ needs.repo-name.outputs.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_READ_ORG_PAT }}

      - name: Determine runner status
        uses: actions/github-script@v7
        id: get-status
        with:
          # Returns missing or online
          # If offline then the workflow stops
          script: |
            const response=${{ steps.list-runners.outputs.data }};
            try {
              const label_for_runner='${{ inputs.LABEL }}'
              let result = 'missing';
              const runners = response['runners'];
              for (const runner of runners) {
                let self_hosted=false;
                const status=runner['status'];
                for (const label of runner['labels']) {
                  if (label['name']==label_for_runner) {
                    self_hosted=true;
                  }
                }
                if (self_hosted) {
                  if (status=='online') {
                    result='online';
                  }
                  if (status=='offline' && result!='online') {
                    result='offline';
                  }
                }
              }
              if (result=='offline') {
                core.setFailed('Runner is offline.  Please get online and try again.');
              } else {
                core.setOutput("status", result);
              }
            } catch (err) {
              core.setFailed(`Action failed with error ${err}`);
            }
    outputs:
      runner_status: ${{ steps.get-status.outputs.status }}

  create-runner-registration-token:
    needs: [find-self-hosted-runner, repo-name]
     # status is 'missing' or 'online'.  If 'online' then there's no need to set up a runner
    if: ${{!cancelled() && !failure() && needs.find-self-hosted-runner.outputs.runner_status == 'missing' }}
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/request-action@v2.4.0
        id: generate-runner-registration-token
        with:
          route: POST /repos/{owner}/{repo}/actions/runners/registration-token
          owner: ${{ github.repository_owner }}
          repo: ${{ needs.repo-name.outputs.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_READ_ORG_PAT }}
    outputs:
      token: ${{ steps.generate-runner-registration-token.outputs.data}}

  create-runner:
    needs: create-runner-registration-token
    uses: "./.github/workflows/aws-deploy.yml"
    with:
      LABEL: ${{ inputs.LABEL }}
      INSTANCE_TYPE: ${{ inputs.INSTANCE_TYPE }}
      CONTEXT: ${{ inputs.CONTEXT }}
      NUMBER_OF_RUNNERS: ${{ inputs.NUMBER_OF_RUNNERS }}
      ROLE_TO_ASSUME: ${{ inputs.ROLE_TO_ASSUME }}
      SYNAPSE_DEPLOYMENT_ROLE: ${{ inputs.SYNAPSE_DEPLOYMENT_ROLE }}
      REPOSITORY_URL: https://github.com/${{ github.repository }}
    secrets:
      REGISTRATION_TOKEN: ${{ fromJSON(needs.create-runner-registration-token.outputs.token).token }}
...
